[{"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\index.js":"1","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\Routes.js":"2","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Home.js":"3","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\backend.js":"4","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Base.js":"5","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Menu.js":"6","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\Signup.js":"7","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\Signin.js":"8","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\auth\\helper\\index.js":"9","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\UserDashBoard.js":"10","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\AdminDashBoard.js":"11","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\auth\\helper\\AdminRoutes.js":"12","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js":"13","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\AddCategory.js":"14","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\helper\\adminapicall.js":"15","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\ManageCategories.js":"16","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\AddProduct.js":"17","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\ManageProducts.js":"18","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\UpdateProduct.js":"19","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\UpdateCategory.js":"20","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Card.js":"21","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\ImageHelper.js":"22","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\coreapicalls.js":"23","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\cartHelper.js":"24","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Cart.js":"25","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\BraintreePayment.js":"26","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\orderHelper.js":"27","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\paymentHelper.js":"28","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\StripeCheckout.js":"29"},{"size":157,"mtime":1611415630113,"results":"30","hashOfConfig":"31"},{"size":1936,"mtime":1611669747825,"results":"32","hashOfConfig":"31"},{"size":1329,"mtime":1611656473782,"results":"33","hashOfConfig":"31"},{"size":49,"mtime":1611417620002,"results":"34","hashOfConfig":"31"},{"size":1247,"mtime":1611635802851,"results":"35","hashOfConfig":"31"},{"size":2928,"mtime":1611540779304,"results":"36","hashOfConfig":"31"},{"size":4202,"mtime":1611497896164,"results":"37","hashOfConfig":"31"},{"size":4188,"mtime":1611539969553,"results":"38","hashOfConfig":"31"},{"size":1600,"mtime":1611501179264,"results":"39","hashOfConfig":"31"},{"size":287,"mtime":1611539128649,"results":"40","hashOfConfig":"31"},{"size":3738,"mtime":1611556258061,"results":"41","hashOfConfig":"31"},{"size":628,"mtime":1611505232438,"results":"42","hashOfConfig":"31"},{"size":595,"mtime":1611505110719,"results":"43","hashOfConfig":"31"},{"size":2954,"mtime":1611548818819,"results":"44","hashOfConfig":"31"},{"size":3800,"mtime":1611601101291,"results":"45","hashOfConfig":"31"},{"size":2841,"mtime":1611596692724,"results":"46","hashOfConfig":"31"},{"size":5836,"mtime":1611561882688,"results":"47","hashOfConfig":"31"},{"size":2812,"mtime":1611596762368,"results":"48","hashOfConfig":"31"},{"size":6946,"mtime":1611635020191,"results":"49","hashOfConfig":"31"},{"size":3374,"mtime":1611601577438,"results":"50","hashOfConfig":"31"},{"size":2412,"mtime":1611671207073,"results":"51","hashOfConfig":"31"},{"size":691,"mtime":1611736315319,"results":"52","hashOfConfig":"31"},{"size":266,"mtime":1611655627645,"results":"53","hashOfConfig":"31"},{"size":1292,"mtime":1611828962545,"results":"54","hashOfConfig":"31"},{"size":1555,"mtime":1611819017566,"results":"55","hashOfConfig":"31"},{"size":3348,"mtime":1611818634458,"results":"56","hashOfConfig":"31"},{"size":560,"mtime":1611830284486,"results":"57","hashOfConfig":"31"},{"size":948,"mtime":1611735989900,"results":"58","hashOfConfig":"31"},{"size":2727,"mtime":1611829798911,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},"1pufhdv",{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"62"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"62"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"62"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"62"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"62"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"62"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"62"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"62"},"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\index.js",[],["129","130"],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\Routes.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Home.js",["131","132"],"import React,{useState, useEffect} from 'react';\r\nimport {API} from \"../backend\";\r\nimport \"../styles.css\";\r\nimport Base from \"./Base\";\r\nimport Card from './Card';\r\nimport { getProducts } from './helper/coreapicalls';\r\n\r\n\r\n\r\nconst Home = () => {\r\n\r\n    const [products, setProducts] = useState([]);\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n    const loadAllProducts = () =>{\r\n        getProducts()\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setError(data.error);\r\n                }else {\r\n                    setProducts(data);\r\n                }\r\n            })\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadAllProducts()\r\n    }, [])\r\n\r\n    return (\r\n        <Base title=\"Home Page\" description=\"Welcome to my T-shirt store\">\r\n            <div className=\"row text-center\">\r\n                <h1 className=\"text-white\">All of tshirts</h1>\r\n                <div className=\"row\">\r\n                    {products.map((product, index)=> {\r\n                        return(\r\n                            <div key={index} className=\"col-4 mb-4\">\r\n                                <Card product={product}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    );\r\n}\r\n\r\nexport default Home;","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\backend.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Base.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Menu.js",[],["133","134"],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\Signup.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\Signin.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\auth\\helper\\index.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\UserDashBoard.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\user\\AdminDashBoard.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\auth\\helper\\AdminRoutes.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\auth\\helper\\PrivateRoutes.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\AddCategory.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\helper\\adminapicall.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\ManageCategories.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\AddProduct.js",["135","136","137","138","139"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Base from '../core/Base';\r\nimport { createProduct, getCategories} from \"./helper/adminapicall\"\r\nimport {isAuthenticated} from \"../auth/helper\";\r\n\r\n// TODO:Assignment:Loading/Redirect\r\n\r\nconst AddProduct = () => {\r\n\r\n  const {user, token} = isAuthenticated();\r\n\r\n    const [values, setValues] = useState({\r\n        name : \"\",\r\n        description : \"\",\r\n        price : \"\",\r\n        stock : \"\",\r\n        photo : \"\",\r\n        categories : [],\r\n        category : \"\",\r\n        loading : false,\r\n        error : \"\",\r\n        createdProduct : \"\",\r\n        getRedirect : false,\r\n        formData : \"\"\r\n    });\r\n\r\n    const {\r\n      name, \r\n      description, \r\n      price, \r\n      stock, \r\n      categories, \r\n      category, \r\n      photo, \r\n      loading,\r\n      error, \r\n      createdProduct,\r\n      getRedirect,\r\n      formData\r\n    } = values;\r\n\r\n    const preload = () => {\r\n      getCategories().then(data => {\r\n        if(data.error) {\r\n          setValues({\r\n            ...values,\r\n            error : data.error\r\n          });\r\n        }else {\r\n          setValues({\r\n            ...values,\r\n            categories : data,\r\n            formData : new FormData()\r\n          });\r\n          console.log(\"CATE\",categories);\r\n        }\r\n      })\r\n    }\r\n\r\n    useEffect(()=> {\r\n      preload();\r\n    }, []);\r\n\r\n    const goBack = () => {\r\n        return(\r\n            <div className=\"mt-5\">\r\n                <Link className=\"btn btn-sm btn-info mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleChange = (name) => (event) => {\r\n        const value = name === \"photo\"  ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, [name] : value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        setValues({...values, error : \"\", loading : true});\r\n        createProduct(user._id, token, formData)\r\n          .then(data => {\r\n            if(data.error) {\r\n              setValues({...values, error : data.error})\r\n            }else{\r\n              setValues({\r\n                ...values,\r\n                name : \"\",\r\n                description : \"\",\r\n                price : \"\",\r\n                stock : \"\",\r\n                photo : \"\",\r\n                loading : false,\r\n                createdProduct : data.name,\r\n              });\r\n            }\r\n          })\r\n    }\r\n\r\n    const successMessage = () => {\r\n      return(\r\n        <div className=\"alert alert-success mt-3\"\r\n          style={{display : createdProduct ? \"\" : \"none\"}}\r\n        >\r\n          <h4>{createProduct} created Successfully!</h4>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const warningMessage = () => {\r\n      if(error) {\r\n        return(\r\n          <div className=\"alert alert-danger mt-3\">\r\n          <h4>{error}!</h4>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const createProductForm = () => (\r\n        <form >\r\n          <span>Post photo</span>\r\n          <div className=\"form-group\">\r\n            <label className=\"btn btn-block btn-success\">\r\n              <input\r\n                onChange={handleChange(\"photo\")}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                accept=\"image\"\r\n                placeholder=\"choose a file\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange(\"name\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              onChange={handleChange(\"description\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Description\"\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange(\"price\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Price\"\r\n              value={price}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <select\r\n              onChange={handleChange(\"category\")}\r\n              className=\"form-control\"\r\n              placeholder=\"Category\"\r\n            >\r\n              <option>Select</option>\r\n              {categories && \r\n                categories.map((category, index) => {\r\n                  return (\r\n                    <option key={index} value={category._id}>{category.name}</option>\r\n                  );\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange(\"stock\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Quantity\"\r\n              value={stock}\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-outline-success mb-3\">\r\n            Create Product\r\n          </button>\r\n        </form>\r\n    );\r\n\r\n    return(\r\n        <Base \r\n            title=\"Add a Product\" \r\n            description=\"add a new product to the existing products\"\r\n            className=\"container bg-info p-4\"\r\n        >\r\n         <div className=\"row bg-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                  {successMessage()}\r\n                  {warningMessage()}\r\n                  {goBack()}\r\n                  {createProductForm()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default AddProduct;","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\ManageProducts.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\UpdateProduct.js",["140"],"import React, {useState, useEffect} from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport Base from '../core/Base';\r\nimport { updateProduct, getCategories, getProduct} from \"./helper/adminapicall\"\r\nimport {isAuthenticated} from \"../auth/helper\";\r\n\r\n// Todo:Rediret back to manage product\r\nconst UpdateProduct = ({match}) => {\r\n\r\n  const {user, token} = isAuthenticated();\r\n\r\n    const [values, setValues] = useState({\r\n        name : \"\",\r\n        description : \"\",\r\n        price : \"\",\r\n        stock : \"\",\r\n        photo : \"\",\r\n        categories : [],\r\n        category : \"\",\r\n        loading : false,\r\n        error : \"\",\r\n        updatedProduct : \"\",\r\n        getRedirect : false,\r\n        formData : \"\"\r\n    });\r\n\r\n    const {\r\n      name, \r\n      description, \r\n      price, \r\n      stock, \r\n      categories, \r\n      loading,\r\n      error, \r\n      updatedProduct,\r\n      getRedirect,\r\n      formData\r\n    } = values;\r\n\r\n    const preload = (productId) => {\r\n      getProduct(productId).then(data => {\r\n        if(data.error) {\r\n          setValues({\r\n            ...values,\r\n            error : data.error\r\n          });\r\n        }else {\r\n          preloadCategories();\r\n          setValues({\r\n            ...values,\r\n            name : data.name,\r\n            description : data.description,\r\n            price : data.price,\r\n            category : data.category._id,\r\n            stock : data.stock,\r\n            formData : new FormData()\r\n          });\r\n          // console.log(\"CATE\",categories);\r\n        }\r\n      })\r\n    }\r\n    \r\n    const preloadCategories = () => {\r\n      getCategories()\r\n        .then(data => {\r\n            if(data.error) {\r\n                setValues({...values, error : data.error})\r\n            }else{\r\n                setValues({\r\n                    categories : data,\r\n                    formData : new FormData()\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=> {\r\n      preload(match.params.productId);\r\n    },[]);\r\n\r\n    const goBack = () => {\r\n        return(\r\n            <div className=\"mt-5\">\r\n                <Link className=\"btn btn-sm btn-info mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    const handleChange = (name) => (event) => {\r\n        const value = name === \"photo\"  ? event.target.files[0] : event.target.value;\r\n        formData.set(name, value);\r\n        setValues({...values, [name] : value});\r\n    }\r\n\r\n    // TODO:update\r\n    const handleSubmit = (event) => {\r\n      event.preventDefault();\r\n      setValues({...values, error : \"\", loading : true});\r\n      \r\n      updateProduct(match.params.productId, user._id, token, formData)\r\n        .then(data => {\r\n          if(data.error) {\r\n            setValues({...values, error : data.error})\r\n          }else{\r\n            setValues({\r\n              ...values,\r\n              name : \"\",\r\n              description : \"\",\r\n              price : \"\",\r\n              stock : \"\",\r\n              photo : \"\",\r\n              loading : false,\r\n              getRedirect : true,\r\n              updatedProduct : data.name,\r\n            });\r\n          }\r\n        })\r\n      \r\n    }\r\n    const successMessage = () => {\r\n      return(\r\n        <div className=\"alert alert-success mt-3\"\r\n          style={{display : updatedProduct ? \"\" : \"none\"}}\r\n        >\r\n          <h4>{updatedProduct} updated Successfully!</h4>\r\n        </div>\r\n      )\r\n    }\r\n\r\n    const warningMessage = () => {\r\n      if(error) {\r\n        return(\r\n          <div className=\"alert alert-danger mt-3\">\r\n          <h4>{error}!</h4>\r\n        </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    const loadingMessage = () => {\r\n      return(\r\n          loading && (\r\n              <div className=\"alert alert-info\">\r\n                  <h2>Loading...</h2>\r\n              </div>\r\n          )\r\n      );\r\n    }\r\n    const performRedirect = () => {\r\n      console.log(getRedirect);\r\n      if(getRedirect){\r\n        return <Redirect to=\"/admin/dashboard\" />\r\n      }\r\n    }\r\n\r\n    const updateProductForm = () => (\r\n        <form >\r\n          <span>Post photo</span>\r\n          <div className=\"form-group\">\r\n            <label className=\"btn btn-block btn-success\">\r\n              <input\r\n                onChange={handleChange(\"photo\")}\r\n                type=\"file\"\r\n                name=\"photo\"\r\n                accept=\"image\"\r\n                placeholder=\"choose a file\"\r\n              />\r\n            </label>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange(\"name\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Name\"\r\n              value={name}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <textarea\r\n              onChange={handleChange(\"description\")}\r\n              name=\"photo\"\r\n              className=\"form-control\"\r\n              placeholder=\"Description\"\r\n              value={description}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange(\"price\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Price\"\r\n              value={price}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <select\r\n              onChange={handleChange(\"category\")}\r\n              className=\"form-control\"\r\n              placeholder=\"Category\"\r\n            >\r\n              <option>Select</option>\r\n              {categories && \r\n                categories.map((category, index) => {\r\n                  return (\r\n                    <option key={index} value={category._id}>{category.name}</option>\r\n                  );\r\n                })\r\n              }\r\n            </select>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <input\r\n              onChange={handleChange(\"stock\")}\r\n              type=\"number\"\r\n              className=\"form-control\"\r\n              placeholder=\"Quantity\"\r\n              value={stock}\r\n            />\r\n          </div>\r\n          \r\n          <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-outline-success mb-3\">\r\n            Update Product\r\n          </button>\r\n        </form>\r\n    );\r\n\r\n    return(\r\n        <Base \r\n            title=\"Add a Product\" \r\n            description=\"add a new product to the existing products\"\r\n            className=\"container bg-info p-4\"\r\n        >\r\n         <div className=\"row bg-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                {loadingMessage()}\r\n                  {successMessage()}\r\n                  {warningMessage()}\r\n                  {goBack()}\r\n                  {updateProductForm()}\r\n                  {performRedirect()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UpdateProduct;","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\admin\\UpdateCategory.js",["141"],"import React, {useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Base from '../core/Base';\r\nimport { updateCategory,  getCategory} from \"./helper/adminapicall\";\r\nimport {isAuthenticated} from \"../auth/helper\";\r\n\r\n\r\nconst UpdateCategory = ({match}) => {\r\n\r\n    \r\n    const {user, token} = isAuthenticated();\r\n    const [category, setCategory] = useState({\r\n        name : \"\",\r\n        error : \"\"\r\n    });\r\n\r\n    const {name, error} = category;\r\n\r\n    const preload = categoryId => {\r\n        getCategory(categoryId)\r\n        .then(data => {\r\n            if(data.error) {\r\n                console.log(data.error);\r\n            }else{\r\n                setCategory({name : data.name})\r\n            }\r\n        })\r\n    }\r\n\r\n    useEffect(()=> {\r\n        preload(match.params.categoryId);\r\n    }, []);\r\n  \r\n    const goBack = () => {\r\n        return(\r\n            <div className=\"mt-5\">\r\n                <Link className=\"btn btn-sm btn-info mb-3\" to=\"/admin/dashboard\">Admin Home</Link>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setCategory({name : event.target.value});\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        // backend request fired\r\n        console.log({name});\r\n        updateCategory(match.params.categoryId, user._id, token, category)\r\n            .then(data => {\r\n                if(data.error) {\r\n                    setCategory({\r\n                        ...category,\r\n                        error : data.error\r\n                    })\r\n                }else{\r\n                    setCategory({name : \"\"});\r\n                }\r\n            })\r\n    }\r\n\r\n    const successMessage = () => {\r\n        if(!name)  {\r\n            return (\r\n                <h4 className=\"text-success\">Category Updated Successfully</h4>\r\n            )\r\n        }\r\n    }\r\n\r\n    const warningMessage = () => {\r\n        if(error) {\r\n            return(\r\n                <h4 className=\"text-danger\"> Failed to update category</h4>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    const myCategoryForm = () => (\r\n        <form>\r\n            <div className=\"form-group\">\r\n                <p className=\"lead\">Enter the category</p>\r\n                <input \r\n                    type=\"text\"  \r\n                    className=\"form-control my-3\"\r\n                    onChange={handleChange}\r\n                    value={name}\r\n                    autoFocus\r\n                    required\r\n                    placeholder=\"For Eg. Summer Collection\"\r\n                />\r\n                <button \r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={handleSubmit}\r\n                >\r\n                    Update Category\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n    return(\r\n        <Base \r\n            title=\"Add a category\"\r\n            description=\"add a new category to the existing categories\"\r\n            className=\"container bg-info p-4\"\r\n        >\r\n            <div className=\"row bg-white rounded\">\r\n                <div className=\"col-md-8 offset-md-2\">\r\n                    {successMessage()}\r\n                    {warningMessage()}\r\n                    {myCategoryForm()}\r\n                    {goBack()}\r\n                </div>\r\n            </div>\r\n        </Base>\r\n    )\r\n}\r\n\r\nexport default UpdateCategory;","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Card.js",["142","143","144"],"import React, {useState, useEffect} from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { addItemToCart, removeItemFromCart } from './helper/cartHelper';\r\nimport ImageHelper from './helper/ImageHelper';\r\n\r\nconst Card = ({\r\n    product,\r\n    addtoCart = true,\r\n    removeFromCart = false,\r\n    setReload = f => f,\r\n    reload = undefined\r\n  }) => {\r\n\r\n    const [redirect, setRedirect] = useState(false);\r\n    const [count, setCount] = useState(product.count);\r\n\r\n    const cardTitle = product ? product.name : \"A stock photo\"\r\n    const cardDescription = product ? product.description : \"A default description\"\r\n    const cardPrice = product ? product.price : \"DEFAULT\"\r\n\r\n    const addToCart = () => {\r\n      addItemToCart(product, () => setRedirect(true));\r\n    }\r\n\r\n    const getARedirect = (redirect) => {\r\n      if(redirect) {\r\n        return <Redirect to=\"/cart\" />\r\n      }\r\n    }\r\n\r\n    const showAddToCart = (addtoCart) => {\r\n      return(\r\n        addtoCart && (\r\n          <button\r\n                onClick={addToCart}\r\n                className=\"btn btn-block btn-outline-success mt-2 mb-2\"\r\n              >\r\n                Add to Cart\r\n          </button>\r\n        )\r\n      )\r\n    }\r\n\r\n    const showRemoveFromCart = (removeFromCart) => {\r\n      return(\r\n        removeFromCart && (\r\n          <button\r\n            onClick={() => {\r\n              removeItemFromCart(product._id);\r\n              setReload(!reload);\r\n            }}\r\n            className=\"btn btn-block btn-outline-danger mt-2 mb-2\"\r\n          >\r\n            Remove from cart\r\n          </button>\r\n        )\r\n      )\r\n    }\r\n\r\n    return (\r\n      <div className=\"card text-white bg-dark border border-info \">\r\n        <div className=\"card-header lead\">{cardTitle}</div>\r\n        <div className=\"card-body\">\r\n          {getARedirect(redirect)}\r\n          <ImageHelper product={product}/>\r\n          <p className=\"lead bg-success font-weight-normal text-wrap\">\r\n            {cardDescription}\r\n          </p>\r\n          <p className=\"btn btn-success rounded  btn-sm px-4\">$ {cardPrice}</p>\r\n          <div className=\"row\">\r\n            <div className=\"col-12\">\r\n              {showAddToCart(addtoCart)}\r\n            </div>\r\n            <div className=\"col-12\">\r\n              {showRemoveFromCart(removeFromCart)}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  export default Card;","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\ImageHelper.js",["145"],"import React from 'react';\r\nimport { API } from '../../backend';\r\n\r\nconst ImageHelper = ({product}) => {\r\n    console.log(`${API}/product/photo/${product._id}`);\r\n    const imageUrl = product ? `${API}/product/photo/${product._id}` : `https://images.pexels.com/photos/6491643/pexels-photo-6491643.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940`\r\n    return(\r\n        <div className=\"rounded border border-success p-2\">\r\n            <img\r\n                src={imageUrl}\r\n                alt=\"photo of tshirt\"\r\n                style={{ maxHeight: \"100%\", maxWidth: \"100%\" }}\r\n                className=\"mb-3 rounded\"\r\n            />\r\n        </div> \r\n    );\r\n}\r\n\r\nexport default ImageHelper;","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\coreapicalls.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\cartHelper.js",["146"],"export const addItemToCart = (item, next) => {\r\n    let cart = [];\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n        cart.push({\r\n            ...item,\r\n            count : 1\r\n        });\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n        next();\r\n    }\r\n}\r\n\r\n\r\nexport const loadCart = () => {\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem(\"cart\")) {\r\n            return JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n    }\r\n}\r\n\r\nexport const removeItemFromCart = (productId) => {\r\n    let cart = [];\r\n    if(typeof window !== undefined) {\r\n        if(localStorage.getItem(\"cart\")) {\r\n            cart = JSON.parse(localStorage.getItem(\"cart\"));\r\n        }\r\n        cart.map((product, index)=>{\r\n            if(product._id === productId) {\r\n                cart.splice(index, 1);\r\n            }\r\n        })\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n    }\r\n    return cart;\r\n}\r\n\r\nexport const cartEmpty = next => {\r\n    if(typeof window !== undefined) {\r\n        localStorage.removeItem(\"cart\");\r\n        let cart = [];\r\n        localStorage.setItem(\"cart\", JSON.stringify(cart));\r\n        next();\r\n    }\r\n}","D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\Cart.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\BraintreePayment.js",["147","148","149","150","151","152","153"],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\orderHelper.js",[],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\helper\\paymentHelper.js",[],["154","155"],"D:\\Web Development\\mernbootcamp\\projfrontend\\src\\core\\StripeCheckout.js",["156","157","158","159","160","161"],"import React,{useState, useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { isAuthenticated } from '../auth/helper';\r\nimport { cartEmpty, loadCart } from './helper/cartHelper';\r\nimport StripeCheckoutButton from \"react-stripe-checkout\";\r\nimport { API } from '../backend';\r\nimport { createOrder } from './helper/orderHelper';\r\n\r\n\r\n\r\nconst StripeCheckout = ({\r\n    products,\r\n    setReload = f => f,\r\n    reload = undefined\r\n}) => {\r\n\r\n    const [data, setData] = useState({\r\n        loading : false,\r\n        success : false,\r\n        error : \"\",\r\n        address : \"\"\r\n    });\r\n\r\n    const token = isAuthenticated() && isAuthenticated().token;\r\n    const userId = isAuthenticated() && isAuthenticated().user._id;\r\n\r\n    const getFinalAmount = () => {\r\n        let amount = 0;\r\n        products.map((p) => {\r\n            amount = amount + p.price;\r\n        })\r\n        return amount;\r\n    }\r\n\r\n    const makePayment = (token) => {\r\n        const body = {\r\n            token,\r\n            products\r\n        } \r\n        const headers = {\r\n            \"Content-Type\" : \"application/json\"\r\n        }\r\n        return fetch(`${API}/stripepayment`,{\r\n            method : \"POST\",\r\n            headers,\r\n            body : JSON.stringify(body)\r\n        }).then(response => {\r\n            console.log(response);\r\n            const {status} = response;\r\n            console.log(\"STATUS\", status);\r\n            const orderData = {\r\n                products : products,\r\n                amount : getFinalAmount()\r\n            }\r\n            createOrder(userId, token, orderData);\r\n            cartEmpty(()=>{\r\n                console.log(\"Did we got a crash?\");\r\n            });\r\n            setReload(!reload);\r\n        }).catch(error => console.log(error))\r\n    }\r\n\r\n    const showStripeButton = () => {\r\n        return isAuthenticated() ? (\r\n            <StripeCheckoutButton\r\n                stripeKey=\"pk_test_51IEX5lLaAQyGrCLteZ69mgtZQpfvF7kKIafBDnxYEP4hcwMZwRotKCnEh9clnP6aBgniozfT9tbOfcPQe0mm04jS00FxoOeKxx\"\r\n                token={makePayment}\r\n                amount={getFinalAmount() * 100}\r\n                name=\"Proceed for Payment\"\r\n                shippingAddress\r\n                billingAddress\r\n            >\r\n                <button className=\"btn btn-success\">Pay with stripe</button>\r\n            </StripeCheckoutButton>\r\n        ) : (\r\n            <Link to=\"/signin\">\r\n                <button className=\"btn btn-warning\">Signin</button>\r\n            </Link>\r\n        )\r\n    }\r\n\r\n    \r\n\r\n\r\n    return(\r\n        <div>\r\n            <h3 className=\"text-white\">Your Total amount is ${getFinalAmount()}</h3>\r\n            {showStripeButton()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StripeCheckout;",{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","severity":1,"message":"167","line":2,"column":9,"nodeType":"168","messageId":"169","endLine":2,"endColumn":12},{"ruleId":"166","severity":1,"message":"170","line":13,"column":12,"nodeType":"168","messageId":"169","endLine":13,"endColumn":17},{"ruleId":"162","replacedBy":"171"},{"ruleId":"164","replacedBy":"172"},{"ruleId":"166","severity":1,"message":"173","line":34,"column":7,"nodeType":"168","messageId":"169","endLine":34,"endColumn":15},{"ruleId":"166","severity":1,"message":"174","line":35,"column":7,"nodeType":"168","messageId":"169","endLine":35,"endColumn":12},{"ruleId":"166","severity":1,"message":"175","line":36,"column":7,"nodeType":"168","messageId":"169","endLine":36,"endColumn":14},{"ruleId":"166","severity":1,"message":"176","line":39,"column":7,"nodeType":"168","messageId":"169","endLine":39,"endColumn":18},{"ruleId":"177","severity":1,"message":"178","line":63,"column":8,"nodeType":"179","endLine":63,"endColumn":10,"suggestions":"180"},{"ruleId":"177","severity":1,"message":"181","line":79,"column":7,"nodeType":"179","endLine":79,"endColumn":9,"suggestions":"182"},{"ruleId":"177","severity":1,"message":"183","line":32,"column":8,"nodeType":"179","endLine":32,"endColumn":10,"suggestions":"184"},{"ruleId":"166","severity":1,"message":"185","line":1,"column":26,"nodeType":"168","messageId":"169","endLine":1,"endColumn":35},{"ruleId":"166","severity":1,"message":"186","line":15,"column":12,"nodeType":"168","messageId":"169","endLine":15,"endColumn":17},{"ruleId":"166","severity":1,"message":"187","line":15,"column":19,"nodeType":"168","messageId":"169","endLine":15,"endColumn":27},{"ruleId":"188","severity":1,"message":"189","line":9,"column":13,"nodeType":"190","endLine":14,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":31,"column":34,"nodeType":"193","messageId":"194","endLine":31,"endColumn":36},{"ruleId":"166","severity":1,"message":"195","line":2,"column":10,"nodeType":"168","messageId":"169","endLine":2,"endColumn":14},{"ruleId":"166","severity":1,"message":"196","line":3,"column":10,"nodeType":"168","messageId":"169","endLine":3,"endColumn":19},{"ruleId":"166","severity":1,"message":"197","line":3,"column":21,"nodeType":"168","messageId":"169","endLine":3,"endColumn":29},{"ruleId":"166","severity":1,"message":"198","line":5,"column":9,"nodeType":"168","messageId":"169","endLine":5,"endColumn":20},{"ruleId":"177","severity":1,"message":"199","line":59,"column":8,"nodeType":"179","endLine":59,"endColumn":10,"suggestions":"200"},{"ruleId":"166","severity":1,"message":"201","line":64,"column":14,"nodeType":"168","messageId":"169","endLine":64,"endColumn":22},{"ruleId":"191","severity":1,"message":"192","line":89,"column":30,"nodeType":"193","messageId":"194","endLine":89,"endColumn":32},{"ruleId":"162","replacedBy":"202"},{"ruleId":"164","replacedBy":"203"},{"ruleId":"166","severity":1,"message":"185","line":1,"column":25,"nodeType":"168","messageId":"169","endLine":1,"endColumn":34},{"ruleId":"166","severity":1,"message":"197","line":4,"column":21,"nodeType":"168","messageId":"169","endLine":4,"endColumn":29},{"ruleId":"166","severity":1,"message":"204","line":17,"column":12,"nodeType":"168","messageId":"169","endLine":17,"endColumn":16},{"ruleId":"166","severity":1,"message":"205","line":17,"column":18,"nodeType":"168","messageId":"169","endLine":17,"endColumn":25},{"ruleId":"166","severity":1,"message":"206","line":24,"column":11,"nodeType":"168","messageId":"169","endLine":24,"endColumn":16},{"ruleId":"191","severity":1,"message":"192","line":29,"column":26,"nodeType":"193","messageId":"194","endLine":29,"endColumn":28},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'API' is defined but never used.","Identifier","unusedVar","'error' is assigned a value but never used.",["207"],["208"],"'category' is assigned a value but never used.","'photo' is assigned a value but never used.","'loading' is assigned a value but never used.","'getRedirect' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preload'. Either include it or remove the dependency array.","ArrayExpression",["209"],"React Hook useEffect has missing dependencies: 'match.params.productId' and 'preload'. Either include them or remove the dependency array.",["210"],"React Hook useEffect has a missing dependency: 'match.params.categoryId'. Either include it or remove the dependency array.",["211"],"'useEffect' is defined but never used.","'count' is assigned a value but never used.","'setCount' is assigned a value but never used.","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Link' is defined but never used.","'cartEmpty' is defined but never used.","'loadCart' is defined but never used.","'createOrder' is defined but never used.","React Hook useEffect has missing dependencies: 'token' and 'userId'. Either include them or remove the dependency array.",["212"],"'getNonce' is assigned a value but never used.",["207"],["208"],"'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'token' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"213","fix":"214"},{"desc":"215","fix":"216"},{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},"Update the dependencies array to be: [preload]",{"range":"221","text":"222"},"Update the dependencies array to be: [match.params.productId, preload]",{"range":"223","text":"224"},"Update the dependencies array to be: [match.params.categoryId]",{"range":"225","text":"226"},"Update the dependencies array to be: [token, userId]",{"range":"227","text":"228"},[1404,1406],"[preload]",[2001,2003],"[match.params.productId, preload]",[825,827],"[match.params.categoryId]",[1999,2001],"[token, userId]"]